{"ast":null,"code":"/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar crypto = require('crypto');\nvar util = require('util');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketConnection = require('./WebSocketConnection');\nvar headerValueSplitRegExp = /,\\s*/;\nvar headerParamSplitRegExp = /;\\s*/;\nvar headerSanitizeRegExp = /[\\r\\n]/g;\nvar xForwardedForSeparatorRegExp = /,\\s*/;\nvar separators = ['(', ')', '<', '>', '@', ',', ';', ':', '\\\\', '\\\"', '/', '[', ']', '?', '=', '{', '}', ' ', String.fromCharCode(9)];\nvar controlChars = [String.fromCharCode(127) /* DEL */];\nfor (var i = 0; i < 31; i++) {\n  /* US-ASCII Control Characters */\n  controlChars.push(String.fromCharCode(i));\n}\nvar cookieNameValidateRegEx = /([\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2f\\x3a-\\x3f\\x40\\x5b-\\x5e\\x7b\\x7d\\x7f])/;\nvar cookieValueValidateRegEx = /[^\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]/;\nvar cookieValueDQuoteValidateRegEx = /^\"[^\"]*\"$/;\nvar controlCharsAndSemicolonRegEx = /[\\x00-\\x20\\x3b]/g;\nvar cookieSeparatorRegEx = /[;,] */;\nvar httpStatusDescriptions = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  406: 'Not Acceptable',\n  407: 'Proxy Authorization Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Request Entity Too Long',\n  414: 'Request-URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  426: 'Upgrade Required',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported'\n};\nfunction WebSocketRequest(socket, httpRequest, serverConfig) {\n  // Superclass Constructor\n  EventEmitter.call(this);\n  this.socket = socket;\n  this.httpRequest = httpRequest;\n  this.resource = httpRequest.url;\n  this.remoteAddress = socket.remoteAddress;\n  this.remoteAddresses = [this.remoteAddress];\n  this.serverConfig = serverConfig;\n\n  // Watch for the underlying TCP socket closing before we call accept\n  this._socketIsClosing = false;\n  this._socketCloseHandler = this._handleSocketCloseBeforeAccept.bind(this);\n  this.socket.on('end', this._socketCloseHandler);\n  this.socket.on('close', this._socketCloseHandler);\n  this._resolved = false;\n}\nutil.inherits(WebSocketRequest, EventEmitter);\nWebSocketRequest.prototype.readHandshake = function () {\n  var self = this;\n  var request = this.httpRequest;\n\n  // Decode URL\n  this.resourceURL = url.parse(this.resource, true);\n  this.host = request.headers['host'];\n  if (!this.host) {\n    throw new Error('Client must provide a Host header.');\n  }\n  this.key = request.headers['sec-websocket-key'];\n  if (!this.key) {\n    throw new Error('Client must provide a value for Sec-WebSocket-Key.');\n  }\n  this.webSocketVersion = parseInt(request.headers['sec-websocket-version'], 10);\n  if (!this.webSocketVersion || isNaN(this.webSocketVersion)) {\n    throw new Error('Client must provide a value for Sec-WebSocket-Version.');\n  }\n  switch (this.webSocketVersion) {\n    case 8:\n    case 13:\n      break;\n    default:\n      var e = new Error('Unsupported websocket client version: ' + this.webSocketVersion + 'Only versions 8 and 13 are supported.');\n      e.httpCode = 426;\n      e.headers = {\n        'Sec-WebSocket-Version': '13'\n      };\n      throw e;\n  }\n  if (this.webSocketVersion === 13) {\n    this.origin = request.headers['origin'];\n  } else if (this.webSocketVersion === 8) {\n    this.origin = request.headers['sec-websocket-origin'];\n  }\n\n  // Protocol is optional.\n  var protocolString = request.headers['sec-websocket-protocol'];\n  this.protocolFullCaseMap = {};\n  this.requestedProtocols = [];\n  if (protocolString) {\n    var requestedProtocolsFullCase = protocolString.split(headerValueSplitRegExp);\n    requestedProtocolsFullCase.forEach(function (protocol) {\n      var lcProtocol = protocol.toLocaleLowerCase();\n      self.requestedProtocols.push(lcProtocol);\n      self.protocolFullCaseMap[lcProtocol] = protocol;\n    });\n  }\n  if (!this.serverConfig.ignoreXForwardedFor && request.headers['x-forwarded-for']) {\n    var immediatePeerIP = this.remoteAddress;\n    this.remoteAddresses = request.headers['x-forwarded-for'].split(xForwardedForSeparatorRegExp);\n    this.remoteAddresses.push(immediatePeerIP);\n    this.remoteAddress = this.remoteAddresses[0];\n  }\n\n  // Extensions are optional.\n  if (this.serverConfig.parseExtensions) {\n    var extensionsString = request.headers['sec-websocket-extensions'];\n    this.requestedExtensions = this.parseExtensions(extensionsString);\n  } else {\n    this.requestedExtensions = [];\n  }\n\n  // Cookies are optional\n  if (this.serverConfig.parseCookies) {\n    var cookieString = request.headers['cookie'];\n    this.cookies = this.parseCookies(cookieString);\n  } else {\n    this.cookies = [];\n  }\n};\nWebSocketRequest.prototype.parseExtensions = function (extensionsString) {\n  if (!extensionsString || extensionsString.length === 0) {\n    return [];\n  }\n  var extensions = extensionsString.toLocaleLowerCase().split(headerValueSplitRegExp);\n  extensions.forEach(function (extension, index, array) {\n    var params = extension.split(headerParamSplitRegExp);\n    var extensionName = params[0];\n    var extensionParams = params.slice(1);\n    extensionParams.forEach(function (rawParam, index, array) {\n      var arr = rawParam.split('=');\n      var obj = {\n        name: arr[0],\n        value: arr[1]\n      };\n      array.splice(index, 1, obj);\n    });\n    var obj = {\n      name: extensionName,\n      params: extensionParams\n    };\n    array.splice(index, 1, obj);\n  });\n  return extensions;\n};\n\n// This function adapted from node-cookie\n// https://github.com/shtylman/node-cookie\nWebSocketRequest.prototype.parseCookies = function (str) {\n  // Sanity Check\n  if (!str || typeof str !== 'string') {\n    return [];\n  }\n  var cookies = [];\n  var pairs = str.split(cookieSeparatorRegEx);\n  pairs.forEach(function (pair) {\n    var eq_idx = pair.indexOf('=');\n    if (eq_idx === -1) {\n      cookies.push({\n        name: pair,\n        value: null\n      });\n      return;\n    }\n    var key = pair.substr(0, eq_idx).trim();\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' === val[0]) {\n      val = val.slice(1, -1);\n    }\n    cookies.push({\n      name: key,\n      value: decodeURIComponent(val)\n    });\n  });\n  return cookies;\n};\nWebSocketRequest.prototype.accept = function (acceptedProtocol, allowedOrigin, cookies) {\n  this._verifyResolution();\n\n  // TODO: Handle extensions\n\n  var protocolFullCase;\n  if (acceptedProtocol) {\n    protocolFullCase = this.protocolFullCaseMap[acceptedProtocol.toLocaleLowerCase()];\n    if (typeof protocolFullCase === 'undefined') {\n      protocolFullCase = acceptedProtocol;\n    }\n  } else {\n    protocolFullCase = acceptedProtocol;\n  }\n  this.protocolFullCaseMap = null;\n\n  // Create key validation hash\n  var sha1 = crypto.createHash('sha1');\n  sha1.update(this.key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n  var acceptKey = sha1.digest('base64');\n  var response = 'HTTP/1.1 101 Switching Protocols\\r\\n' + 'Upgrade: websocket\\r\\n' + 'Connection: Upgrade\\r\\n' + 'Sec-WebSocket-Accept: ' + acceptKey + '\\r\\n';\n  if (protocolFullCase) {\n    // validate protocol\n    for (var i = 0; i < protocolFullCase.length; i++) {\n      var charCode = protocolFullCase.charCodeAt(i);\n      var character = protocolFullCase.charAt(i);\n      if (charCode < 0x21 || charCode > 0x7E || separators.indexOf(character) !== -1) {\n        this.reject(500);\n        throw new Error('Illegal character \"' + String.fromCharCode(character) + '\" in subprotocol.');\n      }\n    }\n    if (this.requestedProtocols.indexOf(acceptedProtocol) === -1) {\n      this.reject(500);\n      throw new Error('Specified protocol was not requested by the client.');\n    }\n    protocolFullCase = protocolFullCase.replace(headerSanitizeRegExp, '');\n    response += 'Sec-WebSocket-Protocol: ' + protocolFullCase + '\\r\\n';\n  }\n  this.requestedProtocols = null;\n  if (allowedOrigin) {\n    allowedOrigin = allowedOrigin.replace(headerSanitizeRegExp, '');\n    if (this.webSocketVersion === 13) {\n      response += 'Origin: ' + allowedOrigin + '\\r\\n';\n    } else if (this.webSocketVersion === 8) {\n      response += 'Sec-WebSocket-Origin: ' + allowedOrigin + '\\r\\n';\n    }\n  }\n  if (cookies) {\n    if (!Array.isArray(cookies)) {\n      this.reject(500);\n      throw new Error('Value supplied for \"cookies\" argument must be an array.');\n    }\n    var seenCookies = {};\n    cookies.forEach(function (cookie) {\n      if (!cookie.name || !cookie.value) {\n        this.reject(500);\n        throw new Error('Each cookie to set must at least provide a \"name\" and \"value\"');\n      }\n\n      // Make sure there are no \\r\\n sequences inserted\n      cookie.name = cookie.name.replace(controlCharsAndSemicolonRegEx, '');\n      cookie.value = cookie.value.replace(controlCharsAndSemicolonRegEx, '');\n      if (seenCookies[cookie.name]) {\n        this.reject(500);\n        throw new Error('You may not specify the same cookie name twice.');\n      }\n      seenCookies[cookie.name] = true;\n\n      // token (RFC 2616, Section 2.2)\n      var invalidChar = cookie.name.match(cookieNameValidateRegEx);\n      if (invalidChar) {\n        this.reject(500);\n        throw new Error('Illegal character ' + invalidChar[0] + ' in cookie name');\n      }\n\n      // RFC 6265, Section 4.1.1\n      // *cookie-octet / ( DQUOTE *cookie-octet DQUOTE ) | %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n      if (cookie.value.match(cookieValueDQuoteValidateRegEx)) {\n        invalidChar = cookie.value.slice(1, -1).match(cookieValueValidateRegEx);\n      } else {\n        invalidChar = cookie.value.match(cookieValueValidateRegEx);\n      }\n      if (invalidChar) {\n        this.reject(500);\n        throw new Error('Illegal character ' + invalidChar[0] + ' in cookie value');\n      }\n      var cookieParts = [cookie.name + '=' + cookie.value];\n\n      // RFC 6265, Section 4.1.1\n      // 'Path=' path-value | <any CHAR except CTLs or ';'>\n      if (cookie.path) {\n        invalidChar = cookie.path.match(controlCharsAndSemicolonRegEx);\n        if (invalidChar) {\n          this.reject(500);\n          throw new Error('Illegal character ' + invalidChar[0] + ' in cookie path');\n        }\n        cookieParts.push('Path=' + cookie.path);\n      }\n\n      // RFC 6265, Section 4.1.2.3\n      // 'Domain=' subdomain\n      if (cookie.domain) {\n        if (typeof cookie.domain !== 'string') {\n          this.reject(500);\n          throw new Error('Domain must be specified and must be a string.');\n        }\n        invalidChar = cookie.domain.match(controlCharsAndSemicolonRegEx);\n        if (invalidChar) {\n          this.reject(500);\n          throw new Error('Illegal character ' + invalidChar[0] + ' in cookie domain');\n        }\n        cookieParts.push('Domain=' + cookie.domain.toLowerCase());\n      }\n\n      // RFC 6265, Section 4.1.1\n      //'Expires=' sane-cookie-date | Force Date object requirement by using only epoch\n      if (cookie.expires) {\n        if (!(cookie.expires instanceof Date)) {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"expires\" must be a vaild date object');\n        }\n        cookieParts.push('Expires=' + cookie.expires.toGMTString());\n      }\n\n      // RFC 6265, Section 4.1.1\n      //'Max-Age=' non-zero-digit *DIGIT\n      if (cookie.maxage) {\n        var maxage = cookie.maxage;\n        if (typeof maxage === 'string') {\n          maxage = parseInt(maxage, 10);\n        }\n        if (isNaN(maxage) || maxage <= 0) {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"maxage\" must be a non-zero number');\n        }\n        maxage = Math.round(maxage);\n        cookieParts.push('Max-Age=' + maxage.toString(10));\n      }\n\n      // RFC 6265, Section 4.1.1\n      //'Secure;'\n      if (cookie.secure) {\n        if (typeof cookie.secure !== 'boolean') {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"secure\" must be of type boolean');\n        }\n        cookieParts.push('Secure');\n      }\n\n      // RFC 6265, Section 4.1.1\n      //'HttpOnly;'\n      if (cookie.httponly) {\n        if (typeof cookie.httponly !== 'boolean') {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"httponly\" must be of type boolean');\n        }\n        cookieParts.push('HttpOnly');\n      }\n      response += 'Set-Cookie: ' + cookieParts.join(';') + '\\r\\n';\n    }.bind(this));\n  }\n\n  // TODO: handle negotiated extensions\n  // if (negotiatedExtensions) {\n  //     response += 'Sec-WebSocket-Extensions: ' + negotiatedExtensions.join(', ') + '\\r\\n';\n  // }\n\n  // Mark the request resolved now so that the user can't call accept or\n  // reject a second time.\n  this._resolved = true;\n  this.emit('requestResolved', this);\n  response += '\\r\\n';\n  var connection = new WebSocketConnection(this.socket, [], acceptedProtocol, false, this.serverConfig);\n  connection.webSocketVersion = this.webSocketVersion;\n  connection.remoteAddress = this.remoteAddress;\n  connection.remoteAddresses = this.remoteAddresses;\n  var self = this;\n  if (this._socketIsClosing) {\n    // Handle case when the client hangs up before we get a chance to\n    // accept the connection and send our side of the opening handshake.\n    cleanupFailedConnection(connection);\n  } else {\n    this.socket.write(response, 'ascii', function (error) {\n      if (error) {\n        cleanupFailedConnection(connection);\n        return;\n      }\n      self._removeSocketCloseListeners();\n      connection._addSocketEventListeners();\n    });\n  }\n  this.emit('requestAccepted', connection);\n  return connection;\n};\nWebSocketRequest.prototype.reject = function (status, reason, extraHeaders) {\n  this._verifyResolution();\n\n  // Mark the request resolved now so that the user can't call accept or\n  // reject a second time.\n  this._resolved = true;\n  this.emit('requestResolved', this);\n  if (typeof status !== 'number') {\n    status = 403;\n  }\n  var response = 'HTTP/1.1 ' + status + ' ' + httpStatusDescriptions[status] + '\\r\\n' + 'Connection: close\\r\\n';\n  if (reason) {\n    reason = reason.replace(headerSanitizeRegExp, '');\n    response += 'X-WebSocket-Reject-Reason: ' + reason + '\\r\\n';\n  }\n  if (extraHeaders) {\n    for (var key in extraHeaders) {\n      var sanitizedValue = extraHeaders[key].toString().replace(headerSanitizeRegExp, '');\n      var sanitizedKey = key.replace(headerSanitizeRegExp, '');\n      response += sanitizedKey + ': ' + sanitizedValue + '\\r\\n';\n    }\n  }\n  response += '\\r\\n';\n  this.socket.end(response, 'ascii');\n  this.emit('requestRejected', this);\n};\nWebSocketRequest.prototype._handleSocketCloseBeforeAccept = function () {\n  this._socketIsClosing = true;\n  this._removeSocketCloseListeners();\n};\nWebSocketRequest.prototype._removeSocketCloseListeners = function () {\n  this.socket.removeListener('end', this._socketCloseHandler);\n  this.socket.removeListener('close', this._socketCloseHandler);\n};\nWebSocketRequest.prototype._verifyResolution = function () {\n  if (this._resolved) {\n    throw new Error('WebSocketRequest may only be accepted or rejected one time.');\n  }\n};\nfunction cleanupFailedConnection(connection) {\n  // Since we have to return a connection object even if the socket is\n  // already dead in order not to break the API, we schedule a 'close'\n  // event on the connection object to occur immediately.\n  process.nextTick(function () {\n    // WebSocketConnection.CLOSE_REASON_ABNORMAL = 1006\n    // Third param: Skip sending the close frame to a dead socket\n    connection.drop(1006, 'TCP connection lost before handshake completed.', true);\n  });\n}\nmodule.exports = WebSocketRequest;","map":{"version":3,"names":["crypto","require","util","url","EventEmitter","WebSocketConnection","headerValueSplitRegExp","headerParamSplitRegExp","headerSanitizeRegExp","xForwardedForSeparatorRegExp","separators","String","fromCharCode","controlChars","i","push","cookieNameValidateRegEx","cookieValueValidateRegEx","cookieValueDQuoteValidateRegEx","controlCharsAndSemicolonRegEx","cookieSeparatorRegEx","httpStatusDescriptions","WebSocketRequest","socket","httpRequest","serverConfig","call","resource","remoteAddress","remoteAddresses","_socketIsClosing","_socketCloseHandler","_handleSocketCloseBeforeAccept","bind","on","_resolved","inherits","prototype","readHandshake","self","request","resourceURL","parse","host","headers","Error","key","webSocketVersion","parseInt","isNaN","e","httpCode","origin","protocolString","protocolFullCaseMap","requestedProtocols","requestedProtocolsFullCase","split","forEach","protocol","lcProtocol","toLocaleLowerCase","ignoreXForwardedFor","immediatePeerIP","parseExtensions","extensionsString","requestedExtensions","parseCookies","cookieString","cookies","length","extensions","extension","index","array","params","extensionName","extensionParams","slice","rawParam","arr","obj","name","value","splice","str","pairs","pair","eq_idx","indexOf","substr","trim","val","decodeURIComponent","accept","acceptedProtocol","allowedOrigin","_verifyResolution","protocolFullCase","sha1","createHash","update","acceptKey","digest","response","charCode","charCodeAt","character","charAt","reject","replace","Array","isArray","seenCookies","cookie","invalidChar","match","cookieParts","path","domain","toLowerCase","expires","Date","toGMTString","maxage","Math","round","toString","secure","httponly","join","emit","connection","cleanupFailedConnection","write","error","_removeSocketCloseListeners","_addSocketEventListeners","status","reason","extraHeaders","sanitizedValue","sanitizedKey","end","removeListener","process","nextTick","drop","module","exports"],"sources":["/home/ubuntu/Projects/digital_trading/frontend/my-react-app/node_modules/websocket/lib/WebSocketRequest.js"],"sourcesContent":["/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar crypto = require('crypto');\nvar util = require('util');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketConnection = require('./WebSocketConnection');\n\nvar headerValueSplitRegExp = /,\\s*/;\nvar headerParamSplitRegExp = /;\\s*/;\nvar headerSanitizeRegExp = /[\\r\\n]/g;\nvar xForwardedForSeparatorRegExp = /,\\s*/;\nvar separators = [\n    '(', ')', '<', '>', '@',\n    ',', ';', ':', '\\\\', '\\\"',\n    '/', '[', ']', '?', '=',\n    '{', '}', ' ', String.fromCharCode(9)\n];\nvar controlChars = [String.fromCharCode(127) /* DEL */];\nfor (var i=0; i < 31; i ++) {\n    /* US-ASCII Control Characters */\n    controlChars.push(String.fromCharCode(i));\n}\n\nvar cookieNameValidateRegEx = /([\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2f\\x3a-\\x3f\\x40\\x5b-\\x5e\\x7b\\x7d\\x7f])/;\nvar cookieValueValidateRegEx = /[^\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]/;\nvar cookieValueDQuoteValidateRegEx = /^\"[^\"]*\"$/;\nvar controlCharsAndSemicolonRegEx = /[\\x00-\\x20\\x3b]/g;\n\nvar cookieSeparatorRegEx = /[;,] */;\n\nvar httpStatusDescriptions = {\n    100: 'Continue',\n    101: 'Switching Protocols',\n    200: 'OK',\n    201: 'Created',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    406: 'Not Acceptable',\n    407: 'Proxy Authorization Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Long',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Satisfiable',\n    417: 'Expectation Failed',\n    426: 'Upgrade Required',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported'\n};\n\nfunction WebSocketRequest(socket, httpRequest, serverConfig) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this.socket = socket;\n    this.httpRequest = httpRequest;\n    this.resource = httpRequest.url;\n    this.remoteAddress = socket.remoteAddress;\n    this.remoteAddresses = [this.remoteAddress];\n    this.serverConfig = serverConfig;\n\n    // Watch for the underlying TCP socket closing before we call accept\n    this._socketIsClosing = false;\n    this._socketCloseHandler = this._handleSocketCloseBeforeAccept.bind(this);\n    this.socket.on('end', this._socketCloseHandler);\n    this.socket.on('close', this._socketCloseHandler);\n\n    this._resolved = false;\n}\n\nutil.inherits(WebSocketRequest, EventEmitter);\n\nWebSocketRequest.prototype.readHandshake = function() {\n    var self = this;\n    var request = this.httpRequest;\n\n    // Decode URL\n    this.resourceURL = url.parse(this.resource, true);\n\n    this.host = request.headers['host'];\n    if (!this.host) {\n        throw new Error('Client must provide a Host header.');\n    }\n\n    this.key = request.headers['sec-websocket-key'];\n    if (!this.key) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Key.');\n    }\n\n    this.webSocketVersion = parseInt(request.headers['sec-websocket-version'], 10);\n\n    if (!this.webSocketVersion || isNaN(this.webSocketVersion)) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Version.');\n    }\n\n    switch (this.webSocketVersion) {\n        case 8:\n        case 13:\n            break;\n        default:\n            var e = new Error('Unsupported websocket client version: ' + this.webSocketVersion +\n                              'Only versions 8 and 13 are supported.');\n            e.httpCode = 426;\n            e.headers = {\n                'Sec-WebSocket-Version': '13'\n            };\n            throw e;\n    }\n\n    if (this.webSocketVersion === 13) {\n        this.origin = request.headers['origin'];\n    }\n    else if (this.webSocketVersion === 8) {\n        this.origin = request.headers['sec-websocket-origin'];\n    }\n\n    // Protocol is optional.\n    var protocolString = request.headers['sec-websocket-protocol'];\n    this.protocolFullCaseMap = {};\n    this.requestedProtocols = [];\n    if (protocolString) {\n        var requestedProtocolsFullCase = protocolString.split(headerValueSplitRegExp);\n        requestedProtocolsFullCase.forEach(function(protocol) {\n            var lcProtocol = protocol.toLocaleLowerCase();\n            self.requestedProtocols.push(lcProtocol);\n            self.protocolFullCaseMap[lcProtocol] = protocol;\n        });\n    }\n\n    if (!this.serverConfig.ignoreXForwardedFor &&\n        request.headers['x-forwarded-for']) {\n        var immediatePeerIP = this.remoteAddress;\n        this.remoteAddresses = request.headers['x-forwarded-for']\n            .split(xForwardedForSeparatorRegExp);\n        this.remoteAddresses.push(immediatePeerIP);\n        this.remoteAddress = this.remoteAddresses[0];\n    }\n\n    // Extensions are optional.\n    if (this.serverConfig.parseExtensions) {\n        var extensionsString = request.headers['sec-websocket-extensions'];\n        this.requestedExtensions = this.parseExtensions(extensionsString);\n    } else {\n        this.requestedExtensions = [];\n    }\n\n    // Cookies are optional\n    if (this.serverConfig.parseCookies) {\n        var cookieString = request.headers['cookie'];\n        this.cookies = this.parseCookies(cookieString);\n    } else {\n        this.cookies = [];\n    }\n};\n\nWebSocketRequest.prototype.parseExtensions = function(extensionsString) {\n    if (!extensionsString || extensionsString.length === 0) {\n        return [];\n    }\n    var extensions = extensionsString.toLocaleLowerCase().split(headerValueSplitRegExp);\n    extensions.forEach(function(extension, index, array) {\n        var params = extension.split(headerParamSplitRegExp);\n        var extensionName = params[0];\n        var extensionParams = params.slice(1);\n        extensionParams.forEach(function(rawParam, index, array) {\n            var arr = rawParam.split('=');\n            var obj = {\n                name: arr[0],\n                value: arr[1]\n            };\n            array.splice(index, 1, obj);\n        });\n        var obj = {\n            name: extensionName,\n            params: extensionParams\n        };\n        array.splice(index, 1, obj);\n    });\n    return extensions;\n};\n\n// This function adapted from node-cookie\n// https://github.com/shtylman/node-cookie\nWebSocketRequest.prototype.parseCookies = function(str) {\n    // Sanity Check\n    if (!str || typeof(str) !== 'string') {\n        return [];\n    }\n\n    var cookies = [];\n    var pairs = str.split(cookieSeparatorRegEx);\n\n    pairs.forEach(function(pair) {\n        var eq_idx = pair.indexOf('=');\n        if (eq_idx === -1) {\n            cookies.push({\n                name: pair,\n                value: null\n            });\n            return;\n        }\n\n        var key = pair.substr(0, eq_idx).trim();\n        var val = pair.substr(++eq_idx, pair.length).trim();\n\n        // quoted values\n        if ('\"' === val[0]) {\n            val = val.slice(1, -1);\n        }\n\n        cookies.push({\n            name: key,\n            value: decodeURIComponent(val)\n        });\n    });\n\n    return cookies;\n};\n\nWebSocketRequest.prototype.accept = function(acceptedProtocol, allowedOrigin, cookies) {\n    this._verifyResolution();\n\n    // TODO: Handle extensions\n\n    var protocolFullCase;\n\n    if (acceptedProtocol) {\n        protocolFullCase = this.protocolFullCaseMap[acceptedProtocol.toLocaleLowerCase()];\n        if (typeof(protocolFullCase) === 'undefined') {\n            protocolFullCase = acceptedProtocol;\n        }\n    }\n    else {\n        protocolFullCase = acceptedProtocol;\n    }\n    this.protocolFullCaseMap = null;\n\n    // Create key validation hash\n    var sha1 = crypto.createHash('sha1');\n    sha1.update(this.key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n    var acceptKey = sha1.digest('base64');\n\n    var response = 'HTTP/1.1 101 Switching Protocols\\r\\n' +\n                   'Upgrade: websocket\\r\\n' +\n                   'Connection: Upgrade\\r\\n' +\n                   'Sec-WebSocket-Accept: ' + acceptKey + '\\r\\n';\n\n    if (protocolFullCase) {\n        // validate protocol\n        for (var i=0; i < protocolFullCase.length; i++) {\n            var charCode = protocolFullCase.charCodeAt(i);\n            var character = protocolFullCase.charAt(i);\n            if (charCode < 0x21 || charCode > 0x7E || separators.indexOf(character) !== -1) {\n                this.reject(500);\n                throw new Error('Illegal character \"' + String.fromCharCode(character) + '\" in subprotocol.');\n            }\n        }\n        if (this.requestedProtocols.indexOf(acceptedProtocol) === -1) {\n            this.reject(500);\n            throw new Error('Specified protocol was not requested by the client.');\n        }\n\n        protocolFullCase = protocolFullCase.replace(headerSanitizeRegExp, '');\n        response += 'Sec-WebSocket-Protocol: ' + protocolFullCase + '\\r\\n';\n    }\n    this.requestedProtocols = null;\n\n    if (allowedOrigin) {\n        allowedOrigin = allowedOrigin.replace(headerSanitizeRegExp, '');\n        if (this.webSocketVersion === 13) {\n            response += 'Origin: ' + allowedOrigin + '\\r\\n';\n        }\n        else if (this.webSocketVersion === 8) {\n            response += 'Sec-WebSocket-Origin: ' + allowedOrigin + '\\r\\n';\n        }\n    }\n\n    if (cookies) {\n        if (!Array.isArray(cookies)) {\n            this.reject(500);\n            throw new Error('Value supplied for \"cookies\" argument must be an array.');\n        }\n        var seenCookies = {};\n        cookies.forEach(function(cookie) {\n            if (!cookie.name || !cookie.value) {\n                this.reject(500);\n                throw new Error('Each cookie to set must at least provide a \"name\" and \"value\"');\n            }\n\n            // Make sure there are no \\r\\n sequences inserted\n            cookie.name = cookie.name.replace(controlCharsAndSemicolonRegEx, '');\n            cookie.value = cookie.value.replace(controlCharsAndSemicolonRegEx, '');\n\n            if (seenCookies[cookie.name]) {\n                this.reject(500);\n                throw new Error('You may not specify the same cookie name twice.');\n            }\n            seenCookies[cookie.name] = true;\n\n            // token (RFC 2616, Section 2.2)\n            var invalidChar = cookie.name.match(cookieNameValidateRegEx);\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie name');\n            }\n\n            // RFC 6265, Section 4.1.1\n            // *cookie-octet / ( DQUOTE *cookie-octet DQUOTE ) | %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n            if (cookie.value.match(cookieValueDQuoteValidateRegEx)) {\n                invalidChar = cookie.value.slice(1, -1).match(cookieValueValidateRegEx);\n            } else {\n                invalidChar = cookie.value.match(cookieValueValidateRegEx);\n            }\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie value');\n            }\n\n            var cookieParts = [cookie.name + '=' + cookie.value];\n\n            // RFC 6265, Section 4.1.1\n            // 'Path=' path-value | <any CHAR except CTLs or ';'>\n            if(cookie.path){\n                invalidChar = cookie.path.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie path');\n                }\n                cookieParts.push('Path=' + cookie.path);\n            }\n\n            // RFC 6265, Section 4.1.2.3\n            // 'Domain=' subdomain\n            if (cookie.domain) {\n                if (typeof(cookie.domain) !== 'string') {\n                    this.reject(500);\n                    throw new Error('Domain must be specified and must be a string.');\n                }\n                invalidChar = cookie.domain.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie domain');\n                }\n                cookieParts.push('Domain=' + cookie.domain.toLowerCase());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Expires=' sane-cookie-date | Force Date object requirement by using only epoch\n            if (cookie.expires) {\n                if (!(cookie.expires instanceof Date)){\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"expires\" must be a vaild date object');\n                }\n                cookieParts.push('Expires=' + cookie.expires.toGMTString());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Max-Age=' non-zero-digit *DIGIT\n            if (cookie.maxage) {\n                var maxage = cookie.maxage;\n                if (typeof(maxage) === 'string') {\n                    maxage = parseInt(maxage, 10);\n                }\n                if (isNaN(maxage) || maxage <= 0 ) {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"maxage\" must be a non-zero number');\n                }\n                maxage = Math.round(maxage);\n                cookieParts.push('Max-Age=' + maxage.toString(10));\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Secure;'\n            if (cookie.secure) {\n                if (typeof(cookie.secure) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"secure\" must be of type boolean');\n                }\n                cookieParts.push('Secure');\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'HttpOnly;'\n            if (cookie.httponly) {\n                if (typeof(cookie.httponly) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"httponly\" must be of type boolean');\n                }\n                cookieParts.push('HttpOnly');\n            }\n\n            response += ('Set-Cookie: ' + cookieParts.join(';') + '\\r\\n');\n        }.bind(this));\n    }\n\n    // TODO: handle negotiated extensions\n    // if (negotiatedExtensions) {\n    //     response += 'Sec-WebSocket-Extensions: ' + negotiatedExtensions.join(', ') + '\\r\\n';\n    // }\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    response += '\\r\\n';\n\n    var connection = new WebSocketConnection(this.socket, [], acceptedProtocol, false, this.serverConfig);\n    connection.webSocketVersion = this.webSocketVersion;\n    connection.remoteAddress = this.remoteAddress;\n    connection.remoteAddresses = this.remoteAddresses;\n\n    var self = this;\n\n    if (this._socketIsClosing) {\n        // Handle case when the client hangs up before we get a chance to\n        // accept the connection and send our side of the opening handshake.\n        cleanupFailedConnection(connection);\n    }\n    else {\n        this.socket.write(response, 'ascii', function(error) {\n            if (error) {\n                cleanupFailedConnection(connection);\n                return;\n            }\n\n            self._removeSocketCloseListeners();\n            connection._addSocketEventListeners();\n        });\n    }\n\n    this.emit('requestAccepted', connection);\n    return connection;\n};\n\nWebSocketRequest.prototype.reject = function(status, reason, extraHeaders) {\n    this._verifyResolution();\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    if (typeof(status) !== 'number') {\n        status = 403;\n    }\n    var response = 'HTTP/1.1 ' + status + ' ' + httpStatusDescriptions[status] + '\\r\\n' +\n                   'Connection: close\\r\\n';\n    if (reason) {\n        reason = reason.replace(headerSanitizeRegExp, '');\n        response += 'X-WebSocket-Reject-Reason: ' + reason + '\\r\\n';\n    }\n\n    if (extraHeaders) {\n        for (var key in extraHeaders) {\n            var sanitizedValue = extraHeaders[key].toString().replace(headerSanitizeRegExp, '');\n            var sanitizedKey = key.replace(headerSanitizeRegExp, '');\n            response += (sanitizedKey + ': ' + sanitizedValue + '\\r\\n');\n        }\n    }\n\n    response += '\\r\\n';\n    this.socket.end(response, 'ascii');\n\n    this.emit('requestRejected', this);\n};\n\nWebSocketRequest.prototype._handleSocketCloseBeforeAccept = function() {\n    this._socketIsClosing = true;\n    this._removeSocketCloseListeners();\n};\n\nWebSocketRequest.prototype._removeSocketCloseListeners = function() {\n    this.socket.removeListener('end', this._socketCloseHandler);\n    this.socket.removeListener('close', this._socketCloseHandler);\n};\n\nWebSocketRequest.prototype._verifyResolution = function() {\n    if (this._resolved) {\n        throw new Error('WebSocketRequest may only be accepted or rejected one time.');\n    }\n};\n\nfunction cleanupFailedConnection(connection) {\n    // Since we have to return a connection object even if the socket is\n    // already dead in order not to break the API, we schedule a 'close'\n    // event on the connection object to occur immediately.\n    process.nextTick(function() {\n        // WebSocketConnection.CLOSE_REASON_ABNORMAL = 1006\n        // Third param: Skip sending the close frame to a dead socket\n        connection.drop(1006, 'TCP connection lost before handshake completed.', true);\n    });\n}\n\nmodule.exports = WebSocketRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}