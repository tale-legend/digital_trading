{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Projects/digital_trading/frontend/my-react-app/src/utils/websocket_real_data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Input } from 'antd';\n// import 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst App = () => {\n  _s();\n  const [displayData, setDisplayData] = useState('');\n  useEffect(() => {\n    const socket = new WebSocket('wss://fstream.binance.com/stream?streams=bnbusdt@aggTrade/btcusdt@markPrice');\n    const fetchData = () => {\n      socket.send('Send data'); // 在这里发送 WebSocket 请求\n    };\n\n    const interval = setInterval(fetchData, 100); // 每隔 100ms 发送一次请求\n\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = event => {\n      const newData = JSON.parse(event.data);\n      // 处理接收到的数据，并更新显示框内容\n      setDisplayData(prevData => prevData + JSON.stringify(newData) + '\\n');\n    };\n    socket.onclose = () => {\n      console.log('WebSocket closed');\n      clearInterval(interval); // 关闭 WebSocket 时清除定时器\n    };\n\n    return () => {\n      clearInterval(interval); // 组件卸载时清除定时器\n      socket.close(); // 组件卸载时关闭 WebSocket 连接\n    };\n  }, []); // 空数组作为 useEffect 的第二个参数，表示只在组件挂载和卸载时执行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        rows: 8,\n        placeholder: \"\\u5927\\u663E\\u793A\\u6846 1\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        rows: 8,\n        value: displayData,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J0OgTXBieYjHA+DegEnRxIXe8kY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","jsxDEV","_jsxDEV","TextArea","App","_s","displayData","setDisplayData","socket","WebSocket","fetchData","send","interval","setInterval","onopen","console","log","onmessage","event","newData","JSON","parse","data","prevData","stringify","onclose","clearInterval","close","style","padding","children","marginBottom","type","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","readOnly","marginTop","value","_c","$RefreshReg$"],"sources":["/home/ubuntu/Projects/digital_trading/frontend/my-react-app/src/utils/websocket_real_data.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Input } from 'antd';\n// import 'antd/dist/antd.css';\n\nconst { TextArea } = Input;\n\nconst App = () => {\n  const [displayData, setDisplayData] = useState('');\n\n  useEffect(() => {\n    const socket = new WebSocket('wss://fstream.binance.com/stream?streams=bnbusdt@aggTrade/btcusdt@markPrice');\n\n    const fetchData = () => {\n      socket.send('Send data'); // 在这里发送 WebSocket 请求\n    };\n\n    const interval = setInterval(fetchData, 100); // 每隔 100ms 发送一次请求\n\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    socket.onmessage = (event) => {\n      const newData = JSON.parse(event.data);\n      // 处理接收到的数据，并更新显示框内容\n      setDisplayData((prevData) => prevData + JSON.stringify(newData) + '\\n');\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket closed');\n      clearInterval(interval); // 关闭 WebSocket 时清除定时器\n    };\n\n    return () => {\n      clearInterval(interval); // 组件卸载时清除定时器\n      socket.close(); // 组件卸载时关闭 WebSocket 连接\n    };\n  }, []); // 空数组作为 useEffect 的第二个参数，表示只在组件挂载和卸载时执行一次\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <div style={{ marginBottom: '20px' }}>\n        <Button type=\"primary\">Post</Button>\n      </div>\n      <div>\n        <TextArea rows={8} placeholder=\"大显示框 1\" readOnly={true} />\n      </div>\n      <div style={{ marginTop: '20px' }}>\n        <TextArea rows={8} value={displayData} readOnly={true} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAM;EAAEC;AAAS,CAAC,GAAGH,KAAK;AAE1B,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAG,IAAIC,SAAS,CAAC,6EAA6E,CAAC;IAE3G,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtBF,MAAM,CAACG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5B,CAAC;;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAACH,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;;IAE9CF,MAAM,CAACM,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAEDR,MAAM,CAACS,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACtC;MACAf,cAAc,CAAEgB,QAAQ,IAAKA,QAAQ,GAAGH,IAAI,CAACI,SAAS,CAACL,OAAO,CAAC,GAAG,IAAI,CAAC;IACzE,CAAC;IAEDX,MAAM,CAACiB,OAAO,GAAG,MAAM;MACrBV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BU,aAAa,CAACd,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;;IAED,OAAO,MAAM;MACXc,aAAa,CAACd,QAAQ,CAAC,CAAC,CAAC;MACzBJ,MAAM,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEzB,OAAA;IAAK0B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B5B,OAAA;MAAK0B,KAAK,EAAE;QAAEG,YAAY,EAAE;MAAO,CAAE;MAAAD,QAAA,eACnC5B,OAAA,CAACH,MAAM;QAACiC,IAAI,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNlC,OAAA;MAAA4B,QAAA,eACE5B,OAAA,CAACC,QAAQ;QAACkC,IAAI,EAAE,CAAE;QAACC,WAAW,EAAC,4BAAQ;QAACC,QAAQ,EAAE;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACNlC,OAAA;MAAK0B,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,eAChC5B,OAAA,CAACC,QAAQ;QAACkC,IAAI,EAAE,CAAE;QAACI,KAAK,EAAEnC,WAAY;QAACiC,QAAQ,EAAE;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9CID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}