{"ast":null,"code":"/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar WebSocketClient = require('./WebSocketClient');\nvar toBuffer = require('typedarray-to-buffer');\nvar yaeti = require('yaeti');\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\nmodule.exports = W3CWebSocket;\nfunction W3CWebSocket(url, protocols, origin, headers, requestOptions, clientConfig) {\n  // Make this an EventTarget.\n  yaeti.EventTarget.call(this);\n\n  // Sanitize clientConfig.\n  clientConfig = clientConfig || {};\n  clientConfig.assembleFragments = true; // Required in the W3C API.\n\n  var self = this;\n  this._url = url;\n  this._readyState = CONNECTING;\n  this._protocol = undefined;\n  this._extensions = '';\n  this._bufferedAmount = 0; // Hack, always 0.\n  this._binaryType = 'arraybuffer'; // TODO: Should be 'blob' by default, but Node has no Blob.\n\n  // The WebSocketConnection instance.\n  this._connection = undefined;\n\n  // WebSocketClient instance.\n  this._client = new WebSocketClient(clientConfig);\n  this._client.on('connect', function (connection) {\n    onConnect.call(self, connection);\n  });\n  this._client.on('connectFailed', function () {\n    onConnectFailed.call(self);\n  });\n  this._client.connect(url, protocols, origin, headers, requestOptions);\n}\n\n// Expose W3C read only attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n  url: {\n    get: function () {\n      return this._url;\n    }\n  },\n  readyState: {\n    get: function () {\n      return this._readyState;\n    }\n  },\n  protocol: {\n    get: function () {\n      return this._protocol;\n    }\n  },\n  extensions: {\n    get: function () {\n      return this._extensions;\n    }\n  },\n  bufferedAmount: {\n    get: function () {\n      return this._bufferedAmount;\n    }\n  }\n});\n\n// Expose W3C write/read attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n  binaryType: {\n    get: function () {\n      return this._binaryType;\n    },\n    set: function (type) {\n      // TODO: Just 'arraybuffer' supported.\n      if (type !== 'arraybuffer') {\n        throw new SyntaxError('just \"arraybuffer\" type allowed for \"binaryType\" attribute');\n      }\n      this._binaryType = type;\n    }\n  }\n});\n\n// Expose W3C readyState constants into the WebSocket instance as W3C states.\n[['CONNECTING', CONNECTING], ['OPEN', OPEN], ['CLOSING', CLOSING], ['CLOSED', CLOSED]].forEach(function (property) {\n  Object.defineProperty(W3CWebSocket.prototype, property[0], {\n    get: function () {\n      return property[1];\n    }\n  });\n});\n\n// Also expose W3C readyState constants into the WebSocket class (not defined by the W3C,\n// but there are so many libs relying on them).\n[['CONNECTING', CONNECTING], ['OPEN', OPEN], ['CLOSING', CLOSING], ['CLOSED', CLOSED]].forEach(function (property) {\n  Object.defineProperty(W3CWebSocket, property[0], {\n    get: function () {\n      return property[1];\n    }\n  });\n});\nW3CWebSocket.prototype.send = function (data) {\n  if (this._readyState !== OPEN) {\n    throw new Error('cannot call send() while not connected');\n  }\n\n  // Text.\n  if (typeof data === 'string' || data instanceof String) {\n    this._connection.sendUTF(data);\n  }\n  // Binary.\n  else {\n    // Node Buffer.\n    if (data instanceof Buffer) {\n      this._connection.sendBytes(data);\n    }\n    // If ArrayBuffer or ArrayBufferView convert it to Node Buffer.\n    else if (data.byteLength || data.byteLength === 0) {\n      data = toBuffer(data);\n      this._connection.sendBytes(data);\n    } else {\n      throw new Error('unknown binary data:', data);\n    }\n  }\n};\nW3CWebSocket.prototype.close = function (code, reason) {\n  switch (this._readyState) {\n    case CONNECTING:\n      // NOTE: We don't have the WebSocketConnection instance yet so no\n      // way to close the TCP connection.\n      // Artificially invoke the onConnectFailed event.\n      onConnectFailed.call(this);\n      // And close if it connects after a while.\n      this._client.on('connect', function (connection) {\n        if (code) {\n          connection.close(code, reason);\n        } else {\n          connection.close();\n        }\n      });\n      break;\n    case OPEN:\n      this._readyState = CLOSING;\n      if (code) {\n        this._connection.close(code, reason);\n      } else {\n        this._connection.close();\n      }\n      break;\n    case CLOSING:\n    case CLOSED:\n      break;\n  }\n};\n\n/**\n * Private API.\n */\n\nfunction createCloseEvent(code, reason) {\n  var event = new yaeti.Event('close');\n  event.code = code;\n  event.reason = reason;\n  event.wasClean = typeof code === 'undefined' || code === 1000;\n  return event;\n}\nfunction createMessageEvent(data) {\n  var event = new yaeti.Event('message');\n  event.data = data;\n  return event;\n}\nfunction onConnect(connection) {\n  var self = this;\n  this._readyState = OPEN;\n  this._connection = connection;\n  this._protocol = connection.protocol;\n  this._extensions = connection.extensions;\n  this._connection.on('close', function (code, reason) {\n    onClose.call(self, code, reason);\n  });\n  this._connection.on('message', function (msg) {\n    onMessage.call(self, msg);\n  });\n  this.dispatchEvent(new yaeti.Event('open'));\n}\nfunction onConnectFailed() {\n  destroy.call(this);\n  this._readyState = CLOSED;\n  try {\n    this.dispatchEvent(new yaeti.Event('error'));\n  } finally {\n    this.dispatchEvent(createCloseEvent(1006, 'connection failed'));\n  }\n}\nfunction onClose(code, reason) {\n  destroy.call(this);\n  this._readyState = CLOSED;\n  this.dispatchEvent(createCloseEvent(code, reason || ''));\n}\nfunction onMessage(message) {\n  if (message.utf8Data) {\n    this.dispatchEvent(createMessageEvent(message.utf8Data));\n  } else if (message.binaryData) {\n    // Must convert from Node Buffer to ArrayBuffer.\n    // TODO: or to a Blob (which does not exist in Node!).\n    if (this.binaryType === 'arraybuffer') {\n      var buffer = message.binaryData;\n      var arraybuffer = new ArrayBuffer(buffer.length);\n      var view = new Uint8Array(arraybuffer);\n      for (var i = 0, len = buffer.length; i < len; ++i) {\n        view[i] = buffer[i];\n      }\n      this.dispatchEvent(createMessageEvent(arraybuffer));\n    }\n  }\n}\nfunction destroy() {\n  this._client.removeAllListeners();\n  if (this._connection) {\n    this._connection.removeAllListeners();\n  }\n}","map":{"version":3,"names":["WebSocketClient","require","toBuffer","yaeti","CONNECTING","OPEN","CLOSING","CLOSED","module","exports","W3CWebSocket","url","protocols","origin","headers","requestOptions","clientConfig","EventTarget","call","assembleFragments","self","_url","_readyState","_protocol","undefined","_extensions","_bufferedAmount","_binaryType","_connection","_client","on","connection","onConnect","onConnectFailed","connect","Object","defineProperties","prototype","get","readyState","protocol","extensions","bufferedAmount","binaryType","set","type","SyntaxError","forEach","property","defineProperty","send","data","Error","String","sendUTF","Buffer","sendBytes","byteLength","close","code","reason","createCloseEvent","event","Event","wasClean","createMessageEvent","onClose","msg","onMessage","dispatchEvent","destroy","message","utf8Data","binaryData","buffer","arraybuffer","ArrayBuffer","length","view","Uint8Array","i","len","removeAllListeners"],"sources":["/home/ubuntu/Projects/digital_trading/frontend/my-react-app/node_modules/websocket/lib/W3CWebSocket.js"],"sourcesContent":["/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar WebSocketClient = require('./WebSocketClient');\nvar toBuffer = require('typedarray-to-buffer');\nvar yaeti = require('yaeti');\n\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\n\nmodule.exports = W3CWebSocket;\n\n\nfunction W3CWebSocket(url, protocols, origin, headers, requestOptions, clientConfig) {\n    // Make this an EventTarget.\n    yaeti.EventTarget.call(this);\n\n    // Sanitize clientConfig.\n    clientConfig = clientConfig || {};\n    clientConfig.assembleFragments = true;  // Required in the W3C API.\n\n    var self = this;\n\n    this._url = url;\n    this._readyState = CONNECTING;\n    this._protocol = undefined;\n    this._extensions = '';\n    this._bufferedAmount = 0;  // Hack, always 0.\n    this._binaryType = 'arraybuffer';  // TODO: Should be 'blob' by default, but Node has no Blob.\n\n    // The WebSocketConnection instance.\n    this._connection = undefined;\n\n    // WebSocketClient instance.\n    this._client = new WebSocketClient(clientConfig);\n\n    this._client.on('connect', function(connection) {\n        onConnect.call(self, connection);\n    });\n\n    this._client.on('connectFailed', function() {\n        onConnectFailed.call(self);\n    });\n\n    this._client.connect(url, protocols, origin, headers, requestOptions);\n}\n\n\n// Expose W3C read only attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n    url:            { get: function() { return this._url;            } },\n    readyState:     { get: function() { return this._readyState;     } },\n    protocol:       { get: function() { return this._protocol;       } },\n    extensions:     { get: function() { return this._extensions;     } },\n    bufferedAmount: { get: function() { return this._bufferedAmount; } }\n});\n\n\n// Expose W3C write/read attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n    binaryType: {\n        get: function() {\n            return this._binaryType;\n        },\n        set: function(type) {\n            // TODO: Just 'arraybuffer' supported.\n            if (type !== 'arraybuffer') {\n                throw new SyntaxError('just \"arraybuffer\" type allowed for \"binaryType\" attribute');\n            }\n            this._binaryType = type;\n        }\n    }\n});\n\n\n// Expose W3C readyState constants into the WebSocket instance as W3C states.\n[['CONNECTING',CONNECTING], ['OPEN',OPEN], ['CLOSING',CLOSING], ['CLOSED',CLOSED]].forEach(function(property) {\n    Object.defineProperty(W3CWebSocket.prototype, property[0], {\n        get: function() { return property[1]; }\n    });\n});\n\n// Also expose W3C readyState constants into the WebSocket class (not defined by the W3C,\n// but there are so many libs relying on them).\n[['CONNECTING',CONNECTING], ['OPEN',OPEN], ['CLOSING',CLOSING], ['CLOSED',CLOSED]].forEach(function(property) {\n    Object.defineProperty(W3CWebSocket, property[0], {\n        get: function() { return property[1]; }\n    });\n});\n\n\nW3CWebSocket.prototype.send = function(data) {\n    if (this._readyState !== OPEN) {\n        throw new Error('cannot call send() while not connected');\n    }\n\n    // Text.\n    if (typeof data === 'string' || data instanceof String) {\n        this._connection.sendUTF(data);\n    }\n    // Binary.\n    else {\n        // Node Buffer.\n        if (data instanceof Buffer) {\n            this._connection.sendBytes(data);\n        }\n        // If ArrayBuffer or ArrayBufferView convert it to Node Buffer.\n        else if (data.byteLength || data.byteLength === 0) {\n            data = toBuffer(data);\n            this._connection.sendBytes(data);\n        }\n        else {\n            throw new Error('unknown binary data:', data);\n        }\n    }\n};\n\n\nW3CWebSocket.prototype.close = function(code, reason) {\n    switch(this._readyState) {\n        case CONNECTING:\n            // NOTE: We don't have the WebSocketConnection instance yet so no\n            // way to close the TCP connection.\n            // Artificially invoke the onConnectFailed event.\n            onConnectFailed.call(this);\n            // And close if it connects after a while.\n            this._client.on('connect', function(connection) {\n                if (code) {\n                    connection.close(code, reason);\n                } else {\n                    connection.close();\n                }\n            });\n            break;\n        case OPEN:\n            this._readyState = CLOSING;\n            if (code) {\n                this._connection.close(code, reason);\n            } else {\n                this._connection.close();\n            }\n            break;\n        case CLOSING:\n        case CLOSED:\n            break;\n    }\n};\n\n\n/**\n * Private API.\n */\n\n\nfunction createCloseEvent(code, reason) {\n    var event = new yaeti.Event('close');\n\n    event.code = code;\n    event.reason = reason;\n    event.wasClean = (typeof code === 'undefined' || code === 1000);\n\n    return event;\n}\n\n\nfunction createMessageEvent(data) {\n    var event = new yaeti.Event('message');\n\n    event.data = data;\n\n    return event;\n}\n\n\nfunction onConnect(connection) {\n    var self = this;\n\n    this._readyState = OPEN;\n    this._connection = connection;\n    this._protocol = connection.protocol;\n    this._extensions = connection.extensions;\n\n    this._connection.on('close', function(code, reason) {\n        onClose.call(self, code, reason);\n    });\n\n    this._connection.on('message', function(msg) {\n        onMessage.call(self, msg);\n    });\n\n    this.dispatchEvent(new yaeti.Event('open'));\n}\n\n\nfunction onConnectFailed() {\n    destroy.call(this);\n    this._readyState = CLOSED;\n\n    try {\n        this.dispatchEvent(new yaeti.Event('error'));\n    } finally {\n        this.dispatchEvent(createCloseEvent(1006, 'connection failed'));\n    }\n}\n\n\nfunction onClose(code, reason) {\n    destroy.call(this);\n    this._readyState = CLOSED;\n\n    this.dispatchEvent(createCloseEvent(code, reason || ''));\n}\n\n\nfunction onMessage(message) {\n    if (message.utf8Data) {\n        this.dispatchEvent(createMessageEvent(message.utf8Data));\n    }\n    else if (message.binaryData) {\n        // Must convert from Node Buffer to ArrayBuffer.\n        // TODO: or to a Blob (which does not exist in Node!).\n        if (this.binaryType === 'arraybuffer') {\n            var buffer = message.binaryData;\n            var arraybuffer = new ArrayBuffer(buffer.length);\n            var view = new Uint8Array(arraybuffer);\n            for (var i=0, len=buffer.length; i<len; ++i) {\n                view[i] = buffer[i];\n            }\n            this.dispatchEvent(createMessageEvent(arraybuffer));\n        }\n    }\n}\n\n\nfunction destroy() {\n    this._client.removeAllListeners();\n    if (this._connection) {\n        this._connection.removeAllListeners();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}